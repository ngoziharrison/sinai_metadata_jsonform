{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/custom.autocomplete.ts","./src/app/data.control.ts","./src/app/data.ts","./src/app/lang.control.ts","./src/environments/environment.ts","./src/main.ts","ignored|/Users/ngoziharrison/Documents/sinai_metadata_jsonform/node_modules/seedrandom|crypto"],"sourcesContent":["import { Component } from '@angular/core';\nimport { angularMaterialRenderers } from '@jsonforms/angular-material';\nimport { and, createAjv, isControl, optionIs, rankWith, schemaTypeIs, scopeEndsWith, Tester } from '@jsonforms/core';\nimport { CustomAutocompleteControlRenderer } from './custom.autocomplete';\nimport { DataDisplayComponent } from './data.control';\nimport { LangComponent } from './lang.control';\nimport uischemaAsset from '../assets/uischema.json';\nimport schemaAsset from '../assets/ms_objects_schema.json';\nimport dataAsset from './data';\nimport { parsePhoneNumber } from 'libphonenumber-js';\nimport { DateAdapter } from '@angular/material/core';\n\nconst departmentTester: Tester = and(\n  schemaTypeIs('string'),\n  scopeEndsWith('department')\n);\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  renderers = [\n    ...angularMaterialRenderers,\n    { tester: rankWith(5, departmentTester), renderer: CustomAutocompleteControlRenderer },\n    {\n      renderer: DataDisplayComponent,\n      tester: rankWith(\n        6,\n        and(\n          isControl,\n          scopeEndsWith('___data')\n        )\n      )\n    },\n    {\n      renderer: LangComponent,\n      tester: rankWith(\n        6,\n        and(\n          isControl,\n          optionIs('lang', true)\n        )\n      )\n    },\n  ];\n  uischema = uischemaAsset;\n  schema = schemaAsset;\n  data = dataAsset;\n  i18n = {locale: 'de-DE'}\n  dateAdapter;\n  ajv = createAjv({\n    schemaId: 'id',\n    allErrors: true\n  });\n  constructor(dateAdapter: DateAdapter<Date>) {\n    this.ajv.addFormat('time', '^([0-1][0-9]|2[0-3]):[0-5][0-9]$');\n    this.dateAdapter = dateAdapter;\n    dateAdapter.setLocale(this.i18n.locale);\n    this.ajv.addFormat('tel', maybePhoneNumber => {\n      try {\n        parsePhoneNumber(maybePhoneNumber, 'DE');\n        return true;\n      } catch (_) {\n        return false;\n      }\n    });\n  }\n}\n","<!--The content below is only a placeholder and can be replaced.-->\n<div style=\"text-align:center\">\n  <h1>\n  </h1>\n  \n  \n</div>\n<jsonforms\n    [data]=\"data\"\n    [schema]=\"schema\"\n    [uischema]=\"uischema\"\n    [renderers]=\"renderers\"\n    [i18n]=\"i18n\"\n    [ajv]=\"ajv\"\n></jsonforms>\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { JsonFormsModule } from '@jsonforms/angular';\nimport { JsonFormsAngularMaterialModule } from '@jsonforms/angular-material';\nimport { AppComponent } from './app.component';\nimport { CustomAutocompleteControlRenderer } from './custom.autocomplete';\nimport { DataDisplayComponent } from './data.control';\nimport { LangComponent } from './lang.control';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomAutocompleteControlRenderer,\n    LangComponent,\n    DataDisplayComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    JsonFormsModule,\n    JsonFormsAngularMaterialModule,\n    MatAutocompleteModule,\n    MatProgressSpinnerModule,\n    HttpClientModule\n  ],\n  schemas: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {generate} from \"random-words\";\nimport {debounceTime, finalize, tap} from 'rxjs/operators';\nimport {switchMap} from 'rxjs/operators';\nimport {delay} from 'rxjs/operators';\nimport {of} from 'rxjs';\nimport {AutocompleteControlRenderer} from '@jsonforms/angular-material';\nimport {Observable} from 'rxjs';\nimport {Component} from '@angular/core';\n\nconst words: string[] = generate(1000);\n\nconst fetchSuggestions = (input: string): Observable<string[]> => {\n  const filtered: string[] = words.filter(word => word.startsWith(input));\n  return of(filtered).pipe(delay(1000));\n};\n\n@Component({\n  selector: 'jsonforms-custom-autocomplete',\n  template: `\n        <mat-form-field fxFlex>\n            <mat-label>{{ label }}</mat-label>\n            <input\n                matInput\n                type=\"text\"\n                (input)=\"onChange($event)\"\n                placeholder=\"{{ description }}\"\n                [id]=\"id\"\n                [formControl]=\"form\"\n                [matAutocomplete]=\"auto\"\n            >\n            <mat-autocomplete\n                autoActiveFirstOption #auto=\"matAutocomplete\" (optionSelected)=\"onSelect($event)\">\n              <mat-option *ngIf=\"isLoading\" class=\"is-loading\"><mat-spinner diameter=\"30\"></mat-spinner></mat-option>\n              <ng-container *ngIf=\"!isLoading\">\n                <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                    {{ option }}\n                </mat-option>\n              </ng-container>\n            </mat-autocomplete>\n            <mat-error>{{ error }}</mat-error>\n        </mat-form-field>\n    `\n})\nexport class CustomAutocompleteControlRenderer extends AutocompleteControlRenderer {\n\n  isLoading: boolean;\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.form.valueChanges\n      .pipe(\n        debounceTime(300),\n        tap(() => this.isLoading = true),\n        switchMap(value => fetchSuggestions(value)\n          .pipe(\n            finalize(() => this.isLoading = false)\n          )\n        )\n      )\n      .subscribe((options: string[]) => this.options = options);\n  }\n}\n","import { Component } from '@angular/core';\nimport { JsonFormsAngularService, JsonFormsControl } from '@jsonforms/angular';\nimport { ControlProps } from '@jsonforms/core';\n\n@Component({\n  selector: 'app-data-component',\n  template: '<pre>{{dataAsString}}</pre>'\n})\nexport class DataDisplayComponent extends JsonFormsControl {\n\n  dataAsString: string;\n\n  constructor(service: JsonFormsAngularService) {\n    super(service);\n  }\n\n  public mapAdditionalProps(props: ControlProps) {\n    this.dataAsString = JSON.stringify(props.data, null, 2);\n  }\n}\n","export default {\n  orders: [\n    {\n      customer: {\n        id: '471201',\n        name: 'Sirius Cybernetics Corporation',\n        department: 'Complaints Division',\n        phone: '(12) 34 56 78 90'\n      },\n      title: '42 killer robots',\n      ordered: true,\n      processId: 1890004498,\n      assignee: 'Philip J. Fry',\n      status: 'ordered',\n      startDate: '2018-06-01',\n      endDate: '2018-08-01',\n    },\n    {\n      customer: {\n        id: '471202',\n        name: 'Very Big Corporation of America',\n        phone: '+49 123 456 789'\n      },\n      title: '1000 gallons of MomCorp Oil',\n      processId: 1890004499,\n      assignee: 'Jen Barber',\n      startDate: '2018-07-01',\n      status: 'planned'\n    }\n  ]\n};\n","import { Component } from '@angular/core';\nimport { JsonFormsAngularService, JsonFormsControl } from '@jsonforms/angular';\nimport { getLocale, setLocale } from '@jsonforms/core';\nimport { DateAdapter } from '@angular/material/core';\n\n@Component({\n  selector: 'app-lang-component',\n  template: `\n    <p>Click button to set locale</p>\n    <p>Current locale: {{currentLocale}}</p>\n    <button mat-raised-button color=\"primary\" (click)=\"changeLocale('de-DE')\">de-DE</button>\n    <button mat-raised-button color=\"primary\" (click)=\"changeLocale('en-US')\">en-US</button>\n  `\n})\nexport class LangComponent extends JsonFormsControl {\n\n  currentLocale: string;\n  dateAdapter;\n\n  constructor(service: JsonFormsAngularService, dateAdapter: DateAdapter<Date>) {\n    super(service);\n    this.dateAdapter = dateAdapter;\n  }\n\n  mapAdditionalProps() {\n    this.currentLocale = getLocale(this.jsonFormsService.getState());\n  }\n\n  changeLocale(localeString: string) {\n    this.jsonFormsService.updateI18n(setLocale(localeString));\n    this.dateAdapter.setLocale(localeString);\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n","/* (ignored) */"],"names":["angularMaterialRenderers","and","createAjv","isControl","optionIs","rankWith","schemaTypeIs","scopeEndsWith","CustomAutocompleteControlRenderer","DataDisplayComponent","LangComponent","uischemaAsset","schemaAsset","dataAsset","parsePhoneNumber","departmentTester","AppComponent","renderers","tester","renderer","uischema","schema","data","i18n","locale","dateAdapter","ajv","schemaId","allErrors","constructor","addFormat","setLocale","maybePhoneNumber","_","i0","ɵɵdirectiveInject","i1","DateAdapter","selectors","decls","vars","consts","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","HttpClientModule","MatAutocompleteModule","MatProgressSpinnerModule","BrowserModule","BrowserAnimationsModule","JsonFormsModule","JsonFormsAngularMaterialModule","AppModule","bootstrap","declarations","imports","generate","debounceTime","finalize","tap","switchMap","delay","of","AutocompleteControlRenderer","ɵɵtext","option_r4","ɵɵtextInterpolate1","ɵɵelementContainerStart","ɵɵtemplate","CustomAutocompleteControlRenderer_ng_container_7_mat_option_1_Template","ɵɵelementContainerEnd","ɵɵpipeBind1","ctx_r2","filteredOptions","words","fetchSuggestions","input","filtered","filter","word","startsWith","pipe","isLoading","ngOnInit","form","valueChanges","value","subscribe","options","t","features","ɵɵInheritDefinitionFeature","CustomAutocompleteControlRenderer_Template","ɵɵlistener","CustomAutocompleteControlRenderer_Template_input_input_3_listener","$event","onChange","CustomAutocompleteControlRenderer_Template_mat_autocomplete_optionSelected_4_listener","onSelect","CustomAutocompleteControlRenderer_mat_option_6_Template","CustomAutocompleteControlRenderer_ng_container_7_Template","ɵɵtextInterpolate","label","ɵɵpropertyInterpolate","description","id","_r0","error","JsonFormsControl","dataAsString","service","mapAdditionalProps","props","JSON","stringify","JsonFormsAngularService","DataDisplayComponent_Template","orders","customer","name","department","phone","title","ordered","processId","assignee","status","startDate","endDate","getLocale","currentLocale","jsonFormsService","getState","changeLocale","localeString","updateI18n","i2","LangComponent_Template","LangComponent_Template_button_click_4_listener","LangComponent_Template_button_click_6_listener","environment","production","enableProdMode","__NgCli_bootstrap_1","platformBrowser","bootstrapModule","catch","err","console","log"],"sourceRoot":"webpack:///","x_google_ignoreList":[9]}